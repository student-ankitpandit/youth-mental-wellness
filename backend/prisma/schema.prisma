// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages Message[]
  chatSessions ChatSession[]
  moods Mood[]
}

model Dashboard {
  id          String   @id @default(cuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  journaling Journaling[]
}

model Journaling {
  id String @id @default(cuid())
  title String
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dashboardId String
  dashboard Dashboard @relation(fields: [dashboardId], references: [id])
}

model Chat {
  id String @id @default(cuid())
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chatSessionId String
  chatSession ChatSession @relation(fields: [chatSessionId], references: [id])
  chats Message[]
}

model ChatSession {
  id String @id @default(cuid())
  messages Chat[]
  userId String
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  chats String
  message Chat @relation(fields: [chats], references: [id])
}

model Mood {
  id String @id @default(cuid())
  userId String
  text String
  moodType String
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
}